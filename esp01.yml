# Pawelo 20221112, created based on https://github.com/nygma2004/esphome
substitutions:
  devicename: esp01

esphome:
  name: $devicename
  platform: ESP8266
  board: esp12e

# Enable logging
logger:
  level: DEBUG

ota:
  safe_mode: true
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "$devicename Fallback Hotspot"
    password: !secret wifi_fallback_password


# Setup for HomeAssistant
#api:
#  password: !secret api_password

captive_portal:

mqtt:
  broker: !secret mqtt_ip
  username: !secret mqtt_user
  password: !secret mqtt_password
  client_id: $devicename

i2c:
  sda: 4
  scl: 5
  scan: true
  id: bus_a

text_sensor:
  - platform: template
    name: Uptime
    id: uptime_human
    icon: mdi:clock-start
    state_topic: $devicename/uptime_text

sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s
    state_topic: $devicename/rssi
  - platform: bme680
    temperature:
      name: "BME680 Temperature"
      oversampling: 16x
      state_topic: $devicename/temperature
    pressure:
      name: "BME680 Pressure"
      state_topic: $devicename/pressure
    humidity:
      name: "BME680 Humidity"
      state_topic: $devicename/humidity
    gas_resistance:
      name: "BME680 Gas Resistance"
      state_topic: $devicename/voc
    address: 0x77
    update_interval: 60s
  - platform: uptime
    name: Uptime Sensor
    id: uptime_sensor
    state_topic: $devicename/uptime
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (minutes ? String(minutes) + "m " : "") +
                (String(seconds) + "s")
              ).c_str();
    filters:
      - lambda: return x / 60;
    unit_of_measurement: "m"

web_server:
  port: 80
