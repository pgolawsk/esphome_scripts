---
#* ESP12F sensor board script name reflecting configuration esp12f_MMmm_SSss__PP.yaml
#* Please read README.md for details
#* For pinout see: file://.//pinouts/ESP_12E_pinout.png
# NOTE: pin 9 do not work (it hangs ESP)- reserved for flashing;
# NOTE: 10 - use with caution, read https://www.letscontrolit.com/forum/viewtopic.php?t=1462
# WARN: DO NOT ADD any more sensors as it will impact /metrics (prometheus) and in worst case brick the device
###
# Pawelo 20230115, 1.1.5, created, manipulator LED on https://forums.adafruit.com/viewtopic.php?f=25&t=72272
# Pawelo 20230923, 1.1.5, added HA Connected binary sensor
# Pawelo, 20240902, refactoring: "status_led" renamed to "led"
# Pawelo, 20241124, include first OVERRIDEs and then BOARD itself
# Pawelo, 20241124, cleanup of old/unused mqtt commented code
# Pawelo, 20241124, added wifi strength sensor and wifi_scan button
# Pawelo, 20250103, added entity_category to LED
# Pawelo, 20250111, fix for /metrics by reducing no of components - disabled measurement LED and led_cycle

# WARN: DO NOT ADD any more sensors as it will impact /metrics (prometheus) and in worst case brick the device
#! run with this command to override substitutions
# esphome -s devicename espXX -s updates 1min -s room <Room name> -s mqtt_room <room> run esp12f_SSss_MMmm__PP.yaml --device 192.168.x.x
# here are default values if those are not given via command line
substitutions:
  devices: "Temperature and Humidity via SHTx30, Illuminance, Color via TCS34725"
  project_name: "pgolawsk.esp_home"
  version: "20250103"

  devicename: esp12f-xx
  updates: "30s"
  room: Room # friendly name of room to display in HA/Web
  # this is ADDITIONAL topic and sub-topic for MQTT - it publishes under <topic>/<sub-topic>/<sensor>
  # by default it's also published under <devicename>/<id_sensor>
  mqtt_location: home
  mqtt_room: room

  # default variable values for !include statements
  accuracy_decimals: "2"

# Override some settings included below in _board_ setup
# <<: !include includes/time_sntp_with_sun.yaml #WARN: this is to make sunrise and sunset sensor to be updated on every time sync event
#! MQTT on_message make prometheus include not working
# <<: !include includes/mqtt_with_rtttl.yaml #WARN: override mqtt with RTTTL support if needed (buzzer and status led)
# <<: !include { file: includes/logger_level.yaml, vars: { level: DEBUG, baud_rate: 115200 } } #WARN: override default log level to specific one
# <<: !include { file: includes/wifi_extended.yaml, vars: { } } #WARN: override wifi to connect to extended network instead of default
# <<: !include { file: includes/wifi_extended2.yaml, vars: { } } #WARN: override wifi to connect to extended network instead of default
# <<: !include includes/wifi_outside.yaml #WARN: override wifi to connect to outside network instead of default

# Include basics of a board
<<: !include includes/board_esp12f.yaml

# Include interfaces needed
<<: !include { file: interfaces/i2c.yaml, vars: { bus_id: "bus_a", sda: "GPIO4", scl: "GPIO5" } }
# <<: !include { file: interfaces/dallas.yaml, vars: { gpio: "GPIO10" } }
<<: !include { file: interfaces/rtttl.yaml, vars: { ix: "" } }

text_sensor:
  - !include sensors/text_uptime.yaml
  - !include sensors/text_version.yaml
  - !include sensors/text_wifi_info.yaml
  # - !include sensors/text_firmware.yaml

  # DEBUG component
  # - !include sensors/text_debug.yaml

  # Sun component
  # - !include sensors/text_sun_sunrise.yaml
  # - !include sensors/text_sun_sunset.yaml
  # - !include sensors/text_sun_time_of_day.yaml
  # - !include sensors/text_sun_direction.yaml

binary_sensor:
  # HA Connected
  - !include sensors/binary_ha_connected.yaml

sensor:
  - !include sensors/uptime.yaml
  # - !include sensors/uptime_boot.yaml
  - !include sensors/wifi_signal.yaml
  # - !include sensors/wifi_strength.yaml

  # DEBUG component
  # - !include sensors/debug.yaml

  # Sun component
  # - !include sensors/sun_elevation.yaml
  # - !include sensors/sun_azimuth.yaml

  # Temperature and Humidity sensor
  - !include { file: sensors/temp_hum_SHT3x.yaml, vars: { ix: "", bus_id: "bus_a", address: "0x44" } }

  # Illuminance sensor
  - !include { file: sensors/lux_color_TCS3472.yaml, vars: { ix: "", bus_id: "bus_a", address: "0x29" } }

output:
  # LED
  - !include { file: outputs/led.yaml, vars: { ix: "", gpio: "GPIO16", inverted: false } }

  # Measurement LED
  - !include { file: outputs/measurement_led.yaml, vars: { ix: "", gpio: "GPIO12" } }

  # RTTTL Buzzer (passive_buzzer)
  - !include { file: outputs/passive_buzzer.yaml, vars: { ix: "", gpio: "GPIO13" } }

light:
  # LED
  # - !include { file: lights/led.yaml, vars: { ix: "", platform: "binary", off_delay: "3s", entity_category: "" } }

  # Measurement LED
  # - !include { file: lights/measurement_led.yaml, vars: { ix: "", off_delay: "30s" } }

switch:
  # LED cycle a few times
  # - !include { file: switches/led_cycle.yaml, vars: { ID: "led", cycles: 5, on_delay: "1s" , off_delay: "500ms" } }

  # RTTTL Play (passive_buzzer)
  - !include { file: switches/rtttl_play.yaml, vars: { ix: "" } }

button:
  # Restart, reset and shutdown buttons
  - !include { file: buttons/restart_button.yaml }
  - !include { file: buttons/safe_mode_restart_button.yaml }
  - !include { file: buttons/factory_reset_button.yaml }
  - !include { file: buttons/shutdown_button.yaml }

  # Scan Wifi button (require wifi_info text sensor to be present to display results)
  # WARN: Performing the scan will disconnect device from current WiFi
  - !include { file: buttons/scan_wifi_button.yaml }