---
#* ESP12F sensor board script name reflecting configuration esp12f_MMmm_SSss__PP.yaml
#* Please read README.md for details
#! pin 9 do not work (it hangs ESP)- reserved for flashing;
#! pin 10 - use with caution, read https://www.letscontrolit.com/forum/viewtopic.php?t=1462
###
# Pawelo 20221117, 1.0.0, created based on edp12f_temp_hum.yml
# Pawelo 20221119, 1.0.1. added updates as parameter
# Pawelo 20221119, 1.1.0. moved to framework with !include statements
# Pawelo 20221119, 1.1.1. added esp version and wifi info text sensors to publish on web
# Pawelo 20221127, 1.1.2, renamed script to reflect sensors/switches and measures/manipulators
# Pawelo 20221127, 1.1.3, added $devices variable to name configutation deployed
# Pawelo 20221127, 1.1.4, moved i2c configuration to separate include file
# Pawelo 20221203, 1.1.5, added Restart button on web

#! run with this command to override substitutions
# esphome -s devicename espXX -s updates 1min -s room <Room name> -s mqtt_room <room> run esp12f_MMmm_SSss__PP.yaml --device 192.168.x.x
# heare are default values if those are not given via command line
substitutions:
  devices: "Temperature, Humidity, Preassure, Gas Resistance via BME680, Illuminance via BH1750 and Gate/Doorbell via GPIO"
  project_name: "pgolawsk.esp_home"
  version: "1.1.5"

  devicename: esp12f-xx
  updates: "30s"
  room: Room # friendly name of room to display in HA/Web
  # this is ADDITIONAL topic and sub-topic for MQTT - it publishes under <topic>/<sub-topic>/<sensor>
  # by default it's also published under <devicename>/<id_sensor>
  mqtt_location: home
  mqtt_room: room

# Include basics of a board
<<: !include includes/board_esp12f.yaml
# Include/Override mqtt with/without RTTTL support if needed
#<<: !include includes/mqtt.yaml
<<: !include includes/mqtt_with_rtttl.yaml

# Include interfaces needed
<<: !include { file: interfaces/i2c.yaml, vars: { bus_id: "bus_a", sda: "GPIO4", scl: "GPIO5" } }
# <<: !include { file: interfaces/dallas.yaml, vars: { gpio: "GPIO10" } }
<<: !include { file: interfaces/rtttl.yaml, vars: { ix: "" } }

# # reinclude MQTT as a bug in ESPHOME, see: https://github.com/esphome/issues/issues/2180, https://github.com/esphome/issues/issues/1487
# mqtt:
#   broker: !secret mqtt_ip
#   port: !secret mqtt_port
# #  username: $devicename
#   username: !secret mqtt_user
#   password: !secret mqtt_password
#   client_id: $devicename
# # id: $devicename

text_sensor:
  - !include sensors/text_uptime.yaml
  - !include sensors/text_version.yaml
  - !include sensors/text_wifi_info.yaml

# binary_sensor:
#   # Doorbell at the gate
#   - !include { file: sensors/binary_doorbell.yaml, vars: { ix: "", doorbell_name: "Doorbell", gpio: "GPIO12", delay_on: '2s', room: "Entry" } }

sensor:
  - !include sensors/uptime.yaml
  - !include sensors/wifi_signal.yaml

  # Temperature and Humidity and Preasure sensor
  - !include { file: sensors/temp_hum_press_gas_BME680.yaml, vars: { ix: "", bus_id: "bus_a", address: "0x77" } }
  # Illuminance sensor
  - !include { file: sensors/lux_BH1750.yaml, vars: { ix: "", bus_id: "bus_a", address: "0x23" } }

output:
  # Status LED
  - !include { file: outputs/status_led.yaml, vars: { ix: "", gpio: "GPIO16" } }

  # RTTTL Buzzer (passive_buzzer)
  - !include { file: outputs/passive_buzzer.yaml, vars: { ix: "", gpio: "GPIO13" } }

light:
  # Status LED
  - !include { file: lights/status_led.yaml, vars: { ix: "", off_delay: "5s" } }

switch:
  # # Restart button
  # - !include switches/platform_restart.yaml

  # Status LED cycle
  - !include { file: switches/led_cycle.yaml, vars: { ID: "status_led", cycles: 3, on_delay: "1s" , off_delay: "500ms" } }

  # RTTTL Play (passive_buzzer)
  - !include { file: switches/rtttl_play.yaml, vars: { ix: "" } }

  # Gate switch
  - !include { file: switches/gate.yaml, vars: { ix: "", gpio: "GPIO14", off_delay: "4s", room: "Entry" } }

button:
  # Restart button
  - !include { file: buttons/restart_button.yaml }
