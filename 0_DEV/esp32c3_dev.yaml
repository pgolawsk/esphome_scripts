---
#* ESP32c3 sensor board script name reflecting configuration esp32_MMmm_SSss__PP.yaml
#* Please read README.md for details
#* For pinout see: file://../pinouts/ESP32c3_pinout_front.jpeg and file://../pinouts/ESP32c3_pinout_back.jpeg
###
# Pawelo 20231205, 1.1.5, created based on esp32_dev.yaml
# Pawelo 20240209, 1.1.5, added ENS160 + AHT21 support
# Pawelo, 20241116, include first OVERRIDEs and then BOARD itself
# Pawelo, 20241122, testing wifi_extended2 with enabled debug mode
# Pawelo, 20241124, added wifi strength sensor and wifi_scan button
# Pawelo, 20241219, added debug component and sensors
# Pawelo, 20241219, added ir_receiver for remote code detection
# Pawelo, 20241219, added ir_transmitter for remote code actions
# Pawelo, 20241220, added packages with IR remote buttons
# Pawelo, 20241221, added factory_reset, safe_restart and shutdown buttons
# Pawelo, 20241221, added receiver variable for IR packages
# Pawelo, 20241222, added PSRAM support (includes/ and debug_with_psram sensor)
# Pawelo, 20241222, changed to use includes/board_esp32.yaml with variables
# Pawelo, 20241223, added "CREATIVE" IR remote control buttons
# Pawelo, 20250103, added commented blue, green LEDs and RTTTL buzzer
# Pawelo, 20250104, switch RGB led from neopixelbus to esp32_rmt
# Pawelo, 20250107, added web_server sorting_groups for IR remotes
# Pawelo, 20250109, added option to select desired framework_type (for board include)
# Pawelo, 20250114, disabled IR receiver and transmitter
# Pawelo, 20250115, added I2S audio (mic and speaker)
# Pawelo, 20250118, enabled RTTTL for tests
# Pawelo, 20250119, refactor i2s audio
# Pawelo, 20250119, added i2s mic bits_per_sample and use_apll as variables
# Pawelo, 20250130, added framework_version variable
# Pawelo, 20250130, added possibility for esp8266 of BME680 BSEC algorithm for IAQ, CO2 and VOC
# Pawelo, 20250201, moved to 0_DEV folder
# Pawelo, 20250207, testing support for rotary encoder and X-Y joystick
# Pawelo, 20250208, added BSEC2 i2c_id selection
# Pawelo, 20250221, added uptime_boot text sensor
# Pawelo, 20250228, disabled joystick, enabled SHT3x
# Pawelo, 20250419, added Wake-on-LAN button vor computer1
# Pawelo, 20250506, testing relay on GPIO 1-4
# Pawelo, 20250506, testing GPIO extender PCF8574
# Pawelo, 20250720, set rmt_symbols to 48 for RGB LED, as it works with 48 block size symbols only

#! run with this command to override substitutions
# esphome -s devicename espXX -s updates 1min -s room <Room name> -s mqtt_room <room> run esp32_MMmm_SSss__PP.yaml --device 192.168.x.x
# here are default values if those are not given via command line

substitutions:
#  devices: "Temperature and Humidity via SHTx30 and Illuminance via BH1750"
  devices: "DEV Kit"
  project_name: "pgolawsk.esp_home"
  version: "20250506"

  # required by ../includes/board_esp32.yaml script
  framework_type: arduino # "arduino" or "esp-idf"
  # framework_type: esp-idf # "arduino" or "esp-idf"
  framework_version: recommended # or specific version like "latest", "recommended", "4.4.4"
  # framework_version: latest # or specific version like "latest", "recommended", "4.4.4"
  board_variant: "c3" # empty for ESP32, other values to display like c3, c6, s2, s3
  board: "esp32-c3-devkitm-1" # like: esp32dev, esp32cam, esp32-c3-devkitm-1, esp32-s3-devkitc-1, esp32-s2-saola-1, full list here https://registry.platformio.org/platforms/platformio/espressif32/boards?version=5.3.0
  flash_size: 4MB # One of 2MB, 4MB, 8MB, 16MB or 32MB
  flash_write_interval: "5min"

  devicename: esp32-xx
  updates: "30s"
  room: Room # friendly name of room to display in HA/Web
  # this is ADDITIONAL topic and sub-topic for MQTT - it publishes under <topic>/<sub-topic>/<sensor>
  # by default it's also published under <devicename>/<id_sensor>
  mqtt_location: home
  mqtt_room: room

  # default variable values for !include statements
  accuracy_decimals: "2"

# Override some settings included below in _board_ setup
<<: !include ../includes/time_sntp_with_sun.yaml #WARN: this is to make sunrise and sunset sensor to be updated on every time sync event
# <<: !include ../includes/mqtt_with_rtttl.yaml #WARN: override mqtt with RTTTL support if needed (buzzer and status led)
<<: !include { file: ../includes/logger_level.yaml, vars: { level: INFO, baud_rate: 115200 } } #WARN: override default log level to specific one
# <<: !include { file: ../includes/logger_level.yaml, vars: { level: DEBUG, baud_rate: 115200 } } #WARN: override default log level to specific one
# <<: !include { file: ../includes/logger_level.yaml, vars: { level: VERY_VERBOSE, baud_rate: 115200 } } #WARN: override default log level to specific one
# <<: !include ../includes/wifi_outside.yaml #WARN: override wifi to connect to outside network instead of default
# <<: !include { file: ../includes/wifi_main.yaml, vars: { } } #WARN: override wifi to connect to extended network instead of default
# <<: !include { file: ../includes/wifi_extended.yaml, vars: { } } #WARN: override wifi to connect to extended network instead of default
# <<: !include { file: ../includes/wifi_extended2.yaml, vars: { } } #WARN: override wifi to connect to extended network instead of default
<<: !include ../includes/api_services.yaml #WARN: this is to expose services like scan_wifi (results in scan_results sensor)

# Include basics of a board
# <<: !include { file: ../includes/board_esp32.yaml, vars: { board_variant: "${board_variant}", board: "${board}", flash_size: "${flash_size}", flash_write_interval: "${flash_write_interval}" } }
<<: !include { file: ../includes/board_esp32.yaml, vars: {} }
# <<: !include { file: ../includes/psram.yaml, vars: { mode: "quad" } } # "quad' for 2MB, "octal" for 4-8MB PSRAM

# Include interfaces needed
<<: !include { file: ../interfaces/debug.yaml, vars: { update_interval: "5s" } }
<<: !include { file: ../interfaces/i2c.yaml, vars: { bus_id: "bus_a", sda: "GPIO21", scl: "GPIO20" } }
# <<: !include { file: ../interfaces/i2c_bme68x_bsec2.yaml, vars: { ix: "", bus_id: "bus_a", address: "0x77", temp_offset: -1.7 } }
# <<: !include { file: ../interfaces/one_wire.yaml, vars: { wire_id: "ow_a", gpio: "GPIO10" } }
# <<: !include { file: ../interfaces/rtttl.yaml, vars: { ix: "" } }
# <<: !include { file: ../interfaces/spi.yaml, vars: { spi_id: "spi_a", clk: "GPIO6", mosi: "GPIO7", miso: "GPIO9" } }
# <<: !include { file: ../interfaces/spi_rc522.yaml, vars: { spi_id: "spi_a", cs: "GPIO5", reset: "GPIO4" } }
# <<: !include { file: ../interfaces/ir_receiver.yaml, vars: { gpio: "GPIO3", dump: "nec", rmt_channel: 2 } } # for ESP32c3 can be 2-3, for ESP32 can be 0-7, for ESP32s2 0-3, for ESP32s3 4-7
# <<: !include { file: ../interfaces/ir_transmitter.yaml, vars: { gpio: "GPIO4", rmt_channel: 0 } } # for ESP32c3 can be 0-1, for ESP32 can be 0-7, for ESP32s2 0-3, for ESP32s3 0-3
# <<: !include { file: ../interfaces/i2c_pcf857x.yaml, vars: { ix: "", address: "0x20", pcf8575: false } }

# I2S Audio (!cannot be used with "I2S Sound Level Meter" below)
# i2s_audio:
#   - <<: !include { file: ../i2s/i2s_audio.yaml, vars: { i2s_id: "i2s_all", ws_pin: "GPIO6", sck_pin: "GPIO7" } }
#   # - <<: !include { file: ../i2s/i2s_audio.yaml, vars: { i2s_id: "i2s_in", ws_pin: "GPIO6", sck_pin: "GPIO7" } }
#   # - <<: !include { file: ../i2s/i2s_audio.yaml, vars: { i2s_id: "i2s_out", ws_pin: "GPIO17", sck_pin: "GPIO16" } }

# <<: !include { file: ../i2s/mic.yaml, vars: { ix: "", i2s_id: "i2s_all", sd_pin: "GPIO5", channel: "left", bits_per_sample: 24bit, use_apll: true } }

# # <<: !include { file: ../i2s/media_player.yaml, vars: { ix: "", i2s_id: "i2s_all", dout_pin: "GPIO2", mode: "mono" } } #! media_player do not work on C3 - do not compile
# <<: !include { file: ../i2s/speaker.yaml, vars: { ix: "", i2s_id: "i2s_all", dout_pin: "GPIO2", channel: "mono" } }

# # <<: !include { file: ../i2s/voice_assistant_mic_only.yaml, vars: { mic_id: "mic" } }
# # <<: !include { file: ../i2s/voice_assistant_mplayer.yaml, vars: { mic_id: "mic", mplayer_id: "mplayer" } }
# <<: !include { file: ../i2s/voice_assistant_speaker.yaml, vars: { mic_id: "mic", speaker_id: "spk" } }

# packages:
#   # I2S Sound Level Meter (!cannot be used with "I2S Audio" above)
#   slm: !include { file: ../i2s/set_i2s_sound_level_meter.yaml, vars: { i2s_id: "i2s_db", din_pin: "GPIO15", ws_pin: "GPIO37", bck_pin: "GPIO38", channel: "left" } }

#   # IR Remote control buttons added from packages
#   # apple_tv: !include { file: ../buttons/set_apple_tv_ir_remote.yaml, vars: { receiver: "ATV" } }
#   smart_tv: !include { file: ../buttons/set_smart_tv_ir_remote.yaml, vars: { receiver: "STV" } }
#   # smart_tv_x: !include { file: ../buttons/set_smart_tv_ir_remote_rest.yaml, vars: { receiver: "STVx" } }
#   # nano_pc: !include { file: ../buttons/set_nano_pc_ir_remote.yaml, vars: { receiver: "NPC" } }
#   # nano_pc_x: !include { file: ../buttons/set_nano_pc_ir_remote_rest.yaml, vars: { receiver: "NPCx" } }
#   lg_tv: !include { file: ../buttons/set_lg_tv_ir_remote.yaml, vars: { receiver: "TV" } }
#   # lg_tv_x: !include { file: ../buttons/set_lg_tv_ir_remote_rest.yaml, vars: { receiver: "TVx" } }
#   yamaha_av_main: !include { file: ../buttons/set_yamaha_av_main_ir_remote.yaml, vars: { receiver: "AV" } }
#   # yamaha_av_main_x: !include { file: ../buttons/set_yamaha_av_main_ir_remote_rest.yaml, vars: { receiver: "AVx" } }
#   yamaha_av_zone2: !include { file: ../buttons/set_yamaha_av_zone2_ir_remote.yaml, vars: { receiver: "AV2" } }
#   # yamaha_av_zone2_x: !include { file: ../buttons/set_yamaha_av_zone2_ir_remote_rest.yaml, vars: { receiver: "AV2x" } }
#   # yamaha_bd: !include { file: ../buttons/set_yamaha_bd_ir_remote.yaml, vars: { receiver: "BD" } }
#   # yamaha_bd_x: !include { file: ../buttons/set_yamaha_bd_ir_remote_rest.yaml, vars: { receiver: "BDx" } }
#   # creative: !include { file: ../buttons/set_creative_ir_remote.yaml, vars: { receiver: "CR" } }

text_sensor:
  - !include ../sensors/text_uptime.yaml
  - !include ../sensors/text_uptime_boot.yaml
  - !include ../sensors/text_version.yaml
  - !include ../sensors/text_wifi_info.yaml

  # DEBUG component
  - !include ../sensors/text_debug.yaml

  # Sun component
  - !include ../sensors/text_sun_sunrise.yaml
  - !include ../sensors/text_sun_sunset.yaml
  - !include ../sensors/text_sun_time_of_day.yaml
  - !include ../sensors/text_sun_direction.yaml

  # Air Quality sensor
  # - !include { file: ../sensors/text_air_quality.yaml }
  # - !include ../sensors/text_air_quality_bme68x.yaml
  # - !include { file: ../sensors/text_IAQ_accuracy_bme68x.yaml, vars: { platform: "bme68x_bsec2" } }

binary_sensor:
  # HA Connected
  - !include ../sensors/binary_ha_connected.yaml

  # Voice Assistant
  # - !include { file: ../sensors/binary_voice_assistant_button.yaml, vars: { gpio: GPIO0 } }

  # Steps encoder button
  # - !include { file: ../sensors/binary_button.yaml, vars: { ix: "", gpio: "GPIO10", inverted: true } }

  # Joystick button
  # - !include { file: ../sensors/binary_button.yaml, vars: { ix: "", gpio: "GPIO10", inverted: true } }

sensor:
  - !include ../sensors/temp_internal.yaml
  - !include ../sensors/uptime.yaml
  - !include ../sensors/uptime_boot.yaml
  - !include ../sensors/wifi_signal.yaml
  - !include ../sensors/wifi_strength.yaml

  # DEBUG component
  - !include ../sensors/debug.yaml
  # - !include ../sensors/debug_with_psram.yaml

  # Sun component
  - !include ../sensors/sun_elevation.yaml
  - !include ../sensors/sun_azimuth.yaml

  # Temperature and Humidity sensor
  - !include { file: ../sensors/temp_hum_SHT3x.yaml, vars: { ix: "", bus_id: "bus_a", address: "0x44" } }
  # - !include { file: ../sensors/temp_hum_AHT2x.yaml, vars: { ix: "", bus_id: "bus_a", address: "0x38" } }

  # Temperature, Humidity, Pressure and Gas Resistance sensor
  # - !include { file: ../sensors/temp_hum_press_gas_BME680.yaml, vars: { ix: "", bus_id: "bus_a", address: "0x77", temp_offset: 0.0, hum_offset: 0.0, pressure_offset: 0.0 } }
  # - !include { file: ../sensors/temp_hum_press_gas_aqi_co2_voc_bme680.yaml, vars: { platform: "bme68x_bsec2", ix: "", bus_id: "bus_a", address: "0x77", temp_offset: -1.7, hum_offset: -3.0, pressure_offset: 7.0 } }

  # Illuminance sensor
  # - !include { file: ../sensors/lux_BH1750.yaml, vars: { ix: "", bus_id: "bus_a", address: "0x23" } }

  # TVOC and eCO2 sensor
  # - !include { file: ../sensors/tvoc_eco2_SGP30.yaml, vars: { ix: "", bus_id: "bus_a", address: "0x58" } }
  # - !include { file: ../sensors/tvoc_eco2_ENS160.yaml, vars: { ix: "", bus_id: "bus_a", address: "0x53" } }

  # Steps sensor (Rotary Encoder KY-040)
  # - !include { file: ../sensors/steps_KY-040.yaml, vars: { ix: "", clk: "GPIO9", dt: "GPIO7" } }

  # Joystick sensor (KY-023)
  # - !include { file: ../sensors/joystick_KY-023.yaml, vars: { ix: "X", gpio: "GPIO0" } }
  # - !include { file: ../sensors/joystick_KY-023.yaml, vars: { ix: "Y", gpio: "GPIO1" } }

button:
  # Restart, reset and shutdown buttons
  - !include { file: ../buttons/restart_button.yaml }
  # for _dev.yaml scripts include additional buttons
  - !include { file: ../buttons/safe_mode_restart_button.yaml }
  - !include { file: ../buttons/factory_reset_button.yaml }
  - !include { file: ../buttons/shutdown_button.yaml }

  # Scan Wifi button (require wifi_info text sensor to be present to display results)
  # WARN: Performing the scan will disconnect device from current WiFi
  - !include { file: ../buttons/scan_wifi_button.yaml }

  # Wake-on-LAN buttons
  - !include { file: ../buttons/wake-on-lan_button.yaml, vars: { wol_name: !secret computer1_wol_name, wol_mac: !secret computer1_wol_mac } }

  # IR Remote control buttons - include as a package
  # single remote buttons can be included here separately
  # # Apple TV Remote,MENU,Received NEC: address=0x87EE, command=0xB603 command_repeats=1
  # - !include { file: ../buttons/rc_nec_button.yaml, vars: { receiver: "AppleTV", action: "MENU", address: 0x87EE, command: 0xB603 } }
  # # some LG TV buttons - via LG
  # - !include { file: ../buttons/rc_lg_button.yaml, vars: { receiver: "LGTV", action: "POWER", data: 0x20DF10EF } }
  # - !include { file: ../buttons/rc_lg_button.yaml, vars: { receiver: "LGTV", action: "INPUT", data: 0x20DFD02F } }
  # - !include { file: ../buttons/rc_lg_button.yaml, vars: { receiver: "LGTV", action: "MUTE", data: 0x20DF906F } }
  # - !include { file: ../buttons/rc_lg_button.yaml, vars: { receiver: "LGTV", action: "BACK", data: 0x20DF14EB } }
  # # some LG TV buttons - via NEC
  # - !include { file: ../buttons/rc_nec_button.yaml, vars: { receiver: "LG_TV", action: "1", address: 0xFB04, command: 0xEE11 } }
  # - !include { file: ../buttons/rc_nec_button.yaml, vars: { receiver: "LG_TV", action: "HOME", address: 0xFB04, command: 0xBC43 } }

output:
  # LED blue (C3 supermini)
  # - !include { file: ../outputs/led.yaml, vars: { ix: "", gpio: "GPIO8", inverted: true } }

  # LED blue (S2 mini)
  # - !include { file: ../outputs/led.yaml, vars: { ix: "", gpio: "GPIO15", inverted: false } }

  # LED green (S3)
  # - !include { file: ../outputs/led.yaml, vars: { ix: "green", gpio: "GPIO43", inverted: true } }
  # LED blue (S3, C3 supermini plus)
  # - !include { file: ../outputs/led.yaml, vars: { ix: "blue", gpio: "GPIO44", inverted: true } }
  #! blue lead is not on GPIO7-9 on C3, need to check further which GPIO it's connected. 0-2 are not
  # - !include { file: ../outputs/led.yaml, vars: { ix: "", gpio: "GPIO9", inverted: true } }

  # LED RGB (required only when RGB led is used as status led)
  # - !include { file: ../outputs/led_rgb.yaml, vars: { ix: "", ID: "rgb_led" } }

  # Passive/RTTTL Buzzer
  # - !include { file: ../outputs/passive_buzzer_ledc.yaml, vars: { ix: "", gpio: "GPIO4" } }

  # Relays
  # - !include { file: ../outputs/relay.yaml, vars: { ix: "", gpio: "GPIO0", inverted: true } }
  # - !include { file: ../outputs/relay.yaml, vars: { ix: "1", gpio: "GPIO1", inverted: true } }
  # - !include { file: ../outputs/relay.yaml, vars: { ix: "2", gpio: "GPIO2", inverted: true } }
  # - !include { file: ../outputs/relay.yaml, vars: { ix: "3", gpio: "GPIO3", inverted: true } }
  # - !include { file: ../outputs/relay.yaml, vars: { ix: "4", gpio: "GPIO4", inverted: true } }

light:
  # LED green (S3)
  # - !include { file: ../lights/led.yaml, vars: { ix: "green", platform: "binary", off_delay: "1days", entity_category: "" } }
  # LED blue (S3, C3 supermini/plus)
  # - !include { file: ../lights/led.yaml, vars: { ix: "", platform: "status_led", off_delay: "1days", entity_category: "diagnostic" } }
  # LED RGB (S3, C3 supermini plus)
  # - !include { file: ../lights/led_rgb__arduino.yaml, vars: { ix: "", gpio: "GPIO8", entity_category: "", rmt_channel: 1 } }
  - !include { file: ../lights/led_rgb.yaml, vars: { ix: "", gpio: "GPIO8", entity_category: "", rmt_symbols: 48 } } #note: rmt_symbols block size is 48 symbols, for regular esp32 and S2 it's 64 symbols
  # - !include { file: ../lights/led_rgb_neopixelbus.yaml, vars: { ix: "", gpio: "GPIO8", entity_category: "" } }

  # Relays
  # - !include { file: ../lights/light_on_relay.yaml, vars: { ix: "1", mdi_icon: "ceiling-light-outline" } }
  # - !include { file: ../lights/light_on_relay.yaml, vars: { ix: "2", mdi_icon: "floor-lamp" } }
  # - !include { file: ../lights/light_on_relay.yaml, vars: { ix: "3", mdi_icon: "ceiling-light" } }
  # - !include { file: ../lights/light_on_relay.yaml, vars: { ix: "4", mdi_icon: "floor-lamp-outline" } }

switch:
  # LED cycle
  # - !include { file: ../switches/led_cycle.yaml, vars: { ID: "led", cycles: 3, on_delay: "1s" , off_delay: "1000ms" } }

  # Passive/RTTTL Buzzer
  # - !include { file: ../switches/passive_buzzer.yaml, vars: { ix: "", off_delay: "500ms" } }
  # - !include { file: ../switches/passive_buzzer_cycle.yaml, vars: { ix: "", cycles: 2, freq: "1000Hz", on_delay: "500ms", off_delay: "200ms" } }
  # - !include { file: ../switches/passive_buzzer_cycle.yaml, vars: { ix: "", cycles: 3, freq: "2000Hz", on_delay: "500ms", off_delay: "200ms" } }
  # - !include { file: ../switches/passive_buzzer_cycle.yaml, vars: { ix: "", cycles: 4, freq: "800Hz", on_delay: "500ms", off_delay: "200ms" } }

  # RTTTL Play (passive_buzzer)
  # - !include { file: ../switches/rtttl_play.yaml, vars: { ix: "" } }
  # - !include { file: ../switches/rtttl_play.yaml, vars: { ix: "2", mqtt_location: "${mqtt_location2}", mqtt_room: "${mqtt_room2}" } }

  # Relays
  # - !include { file: ../switches/relay.yaml, vars: { ix: "1", mdi_icon: "light-switch", gpio: GPIO1, inverted: true, off_delay: 10min } }
  # - !include { file: ../switches/relay.yaml, vars: { ix: "2", mdi_icon: "light-switch", gpio: GPIO2, inverted: true, off_delay: 10min } }
  # - !include { file: ../switches/relay.yaml, vars: { ix: "3", mdi_icon: "light-switch", gpio: GPIO3, inverted: true, off_delay: 10min } }
  # - !include { file: ../switches/relay.yaml, vars: { ix: "4", mdi_icon: "light-switch", gpio: GPIO4, inverted: true, off_delay: 10min } }

#  - !include { file: ../switches/relay_on_pcf857x.yaml, vars: { hub_ix: "", ix: "1", mdi_icon: "light-switch", gpio: 0, inverted: true, off_delay: 10min } }
