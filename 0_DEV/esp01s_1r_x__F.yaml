---
#* ESP01s single relay board, script name reflecting configuration esp01s_MMmm_SSss__PP.yaml
#* Please read README.md for details
#* For pinout see: file://../pinouts/ESP_12E_pinout.png
###
# Pawelo 20221222, 1.1.5, created based esp12f_ scripts
# Pawelo 20230923, 1.1.5, added HA Connected binary sensor
# Pawelo, 20250107, typo corrections
# Pawelo, 20250111, changed to use includes/board_esp8266.yaml with variables
# Pawelo, 20250202, moved to 0_DEV folder
# Pawelo, 20250221, added uptime_boot text sensor (disabled)

#! run with this command to override substitutions
# esphome -s devicename espXX -s updates 1min -s room <Room name> -s mqtt_room <room> -s delay_off <time of active output> run esp01s_SSss_MMmm__PP.yaml --device 192.168.x.x
# here are default values if those are not given via command line
substitutions:
  devices: "Single Relay Switch"
  project_name: "pgolawsk.esp_home"
  version: "20250221"

  # required by ../includes/board_esp8266.yaml script
  board_variant: "01s" # determine variant like 12F, 07s, 01m, ...
  board: "esp01_1m" # like: esp12e, esp01_1m, full list here https://registry.platformio.org/platforms/platformio/espressif8266/boards
  restore_from_flash: "true" # must be set as string to work
  flash_write_interval: "5min"

  devicename: esp01s-xx
  updates: "30s"
  room: Room # friendly name of room to display in HA/Web
  # this is ADDITIONAL topic and sub-topic for MQTT - it publishes under <topic>/<sub-topic>/<sensor>
  # by default it's also published under <devicename>/<id_sensor>
  mqtt_location: home
  mqtt_room: room

  # default variable values for !include statements
  accuracy_decimals: "2"
  # how much time to wait till relay will bw switched off
  off_delay: 10min

# Override some settings included below in _board_ setup
# <<: !include ../includes/time_sntp_with_sun.yaml #WARN: this is to make sunrise and sunset sensor to be updated on every time sync event
# <<: !include ../includes/mqtt_with_rtttl.yaml #WARN: override mqtt with RTTTL support if needed (buzzer and status led)
# <<: !include { file: ../includes/logger_level.yaml, vars: { level: INFO, baud_rate: 115200 } } #WARN: override default log level to specific one
# <<: !include { file: ../includes/logger_level.yaml, vars: { level: DEBUG, baud_rate: 115200 } } #WARN: override default log level to specific one
# <<: !include { file: ../includes/logger_level.yaml, vars: { level: VERY_VERBOSE, baud_rate: 115200 } } #WARN: override default log level to specific one
# <<: !include ../includes/wifi_outside.yaml #WARN: override wifi to connect to outside network instead of default
# <<: !include { file: ../includes/wifi_main.yaml, vars: { } } #WARN: override wifi to connect to extended network instead of default
# <<: !include { file: ../includes/wifi_extended.yaml, vars: { } } #WARN: override wifi to connect to extended network instead of default
# <<: !include { file: ../includes/wifi_extended2.yaml, vars: { } } #WARN: override wifi to connect to extended network instead of default
# <<: !include ../includes/api_services.yaml #WARN: this is to expose services like scan_wifi (results in scan_results sensor)

# Include basics of a board
# <<: !include { file: ../includes/board_esp8266.yaml, vars: { board: "${board}", board_variant: "${board_variant}", restore_from_flash: "${restore_from_flash}", flash_write_interval: "${flash_write_interval}" } }
<<: !include { file: ../includes/board_esp8266.yaml, vars: {} }
# <<: !include ../includes/board_esp01s.yaml

# Include interfaces needed
# <<: !include { file: ../interfaces/debug.yaml, vars: { update_interval: "15s" } }
# <<: !include { file: ../interfaces/rtttl.yaml, vars: { ix: "" } }
# <<: !include { file: ../interfaces/i2c.yaml, vars: { bus_id: "bus_a", sda: "GPIO4", scl: "GPIO2" } }

text_sensor:
  - !include ../sensors/text_uptime.yaml
  # - !include ../sensors/text_uptime_boot.yaml
  - !include ../sensors/text_version.yaml
  - !include ../sensors/text_wifi_info.yaml

  # DEBUG component
  # - !include ../sensors/text_debug.yaml

binary_sensor:
  # HA Connected
  - !include ../sensors/binary_ha_connected.yaml

sensor:
  - !include ../sensors/uptime.yaml
  # - !include ../sensors/uptime_boot.yaml
  - !include ../sensors/wifi_signal.yaml
  - !include ../sensors/wifi_strength.yaml

  # DEBUG component
  # - !include sensors/debug.yaml

#  # Temperature and Humidity sensor
#  - !include { file: ../sensors/temp_hum_SHT3x.yaml, vars: { ix: "", bus_id: "bus_a", address: "0x44" } }

output:
  # Relay
  - !include { file: ../outputs/relay.yaml, vars: { ix: "", gpio: "GPIO0", inverted: true } }

button:
  # Restart, reset and shutdown buttons
  - !include { file: ../buttons/restart_button.yaml }
  - !include { file: ../buttons/safe_mode_restart_button.yaml }
  - !include { file: ../buttons/factory_reset_button.yaml }
  - !include { file: ../buttons/shutdown_button.yaml }

  # Scan Wifi button (require wifi_info text sensor to be present to display results)
  # WARN: Performing the scan will disconnect device from current WiFi
  - !include { file: ../buttons/scan_wifi_button.yaml }

fan:
  # Fan on relay
  - !include { file: ../fans/fan_on_relay.yaml, vars: { ix: "", off_delay: "${off_delay}" } }

# # Single Switch on ESP-01/01S Relay board
# <<: !include ../switches/1relay_fan_generic_board.yaml